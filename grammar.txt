{
  var SequenceStub = function(data, alignment)
  {
    this.aligment_ = alignment;
    this.data_ = data;
  }
}

start = sequence

ws "whitespace" = " "*
comma = ws "," ws;
quote = '"'

// single step definition
step_char =  [0-9a-zA-Z]
step = ws chars:step_char+ ws { return chars.join("") }

// define a sub cycle i.e. [1 2, 3 [4]]
sub_cycle =   "[" s:stack "]" { return s}

// a slice is either a single step or a sub cycle
slice = step / sub_cycle

// a cycle is a combination of one or more slices
cycle = s:(slice)+ { return new SequenceStub(s,"h")}

// a stack is a serie of vertically aligned cycles, separated by a comma
stack = c:cycle cs:(comma v:cycle { return v})*
  { cs.unshift(c); return new SequenceStub(cs,"v") }
// a sequence is a quoted stack
sequence = ws quote s:stack quote
  { return s; }
